#+HTML: <h1 align="center">rofi-borg</h1>
#+HTML: <p align="center"><img src="demo.gif"/></p>
#+HTML: <p align="center"><code>rofi-borg</code> is a GUI wrapper script for <a href="https://www.borgbackup.org/">borg backup</a>. It aims to be easy to setup, highly capable, and customizable.</p>
** Motivation
With my system, software, and configurations managed through GitHub ([[https://github.com/noncog/debian-autosetup][debian-autosetup]] and [[https://github.com/noncog/.dotfiles][.dotfiles]]), I required a method to backup and restore my private files. Thus, I created rofi-borg as a lean solution to have encrypted backups and a simple GUI to manage them.
** Features
*** Borg:
- *Create and Prune* backups (archives) in a repository.
- *List* archives in a repository.
- *Download* an archive from a repository.
- *Delete* an archive from a repository.
- Automatic password handling.
- Able to use borg environment variables without setting them globally in =env=.
  - Protects you from having your borg information being backed up in your dotfiles.
*** Script:
- Supports automation of backups.
  - Just call =backup_run.sh= from cron or systemd. May create template for this later.
- Supports notifications!
  - Uses your notification command of choice. Default: [[https://dunst-project.org/][Dunst]].
- Uses logging:
  - Gets info in the background and logs to files, allowing you to work while rofi-borg runs.
  - Configurable number of logs to keep.
  - Automatic pruning of logs directory.
- Easily configured:
  - Configured from main script. Settings are passed to subsequent scripts.
- Customizable:
  - Default theme is [[https://draculatheme.com/rofi][Dracula]]!
  - Each script has an associated rofi config, allowing each to be customized/themed independently.
    - =NOTE= rofi/theme configs can be made to be inherited, may add later.
- Extendable:
  - Just write a script and a rofi config file with matching names in their correct directories and add it to the =rofi-borg.sh= menu!
** Requirements
- =rofi= and =borg=
- some form of font based icons: default: Font Awesome 5

** Installation
1. Install dependencies.
2. *Reccomended Install*:
   - This install method allows you to version control rofi-borg into your rofi dotfiles, so it is available to reinstall your backups as soon as your dotfiles are installed.
     1. =cd $HOME/.config/rofi/=
     2. =git clone https://github.com/noncog/rofi-borg=
     3. configure =rofi-borg.sh= and launch using preferred method.
** Usage
Before you can use the script, it must be configured and you need to setup a launching method.

#+HTML: <table><tr><th>:warning: WARNING</th></tr><tr><td>This script is not designed to completely setup borg backup for you. You need to have an understanding of how borg is used and have a valid repository.</td><tr/></table>

*** Configuration:
=rofi-borg= is designed to be easily configured from the top level script and the settings are passed into subsequent scripts. Configuring =rofi-borg.sh= is the minimal amount of configuration required.

The options you can change in each script are clearly marked in the comments.
**** rofi-borg.sh
- *global options* - Applies to all subscripts.
  - Minimally must set:
    1. directory=" " to your install location.
    2. downloads=" " to your desired download location.
    3. notifications="y" or "n" if you want progress notifications.
       - If using "y", must set notifier=" " to your desired command for notifications.

- *borg environment variables* - Only set/add them here. Not in subscripts.
  - Minimally must use:
    1. BORG_REPO
    2. BORG_PASSPHRASE or BORG_PASSCOMMAND
       - If using password/passkey. (RECCOMENDED)
       - Otherwise comment it out.

**** sub-scripts
- Located in =rofi-borg/scripts/=
- Contain *borg command options*.
  - Always located under borg-vars comment in each script.
    - rofi-borg ships with sane defaults.
    - If you know the exact command options you want, set them in the corresponding script before using.

*** Launching:
You can launch rofi-borg however you like, there are no hard coded methods for doing so. Below are some possible methods.

**** Locally
1. =cd= into install directory
2. =./rofi-borg.sh= or =bash rofi-borg.sh=
**** Globally
- =bash $HOME/.config/rofi/rofi-borg/rofi-borg.sh=
  - If installed elsewhere supply your own file path.
- (optional) For easy access, add the script somewhere in your $PATH.
  
**** From Window Managers
Just call the script from your window manager config.

i3: =bindsym $mod+Shift+BackSpace exec --no-startup-id $HOME/.config/rofi/rofi-borg/rofi-borg.sh=

**** From Custom Rofi Menus
I assume, if you have a custom rofi menu that you know how to add to it and will not be covering that here. Instead, all you should need is to call the script using the global launch method from above:
- =bash $HOME/.config/rofi/rofi-borg/rofi-borg.sh=
  - =NOTE= If you keep your menu scripts in rofi or better integrate rofi-borg into them, the file paths can be more easily managed. Just another reason to keep your rofi stuff together.

**** From Rofi combi-mode
Just add the script to combi-modi in your main rofi config: =$HOME/.config/rofi/config.rasi=

Example:
#+BEGIN_SRC
configuration {
    combi-modi: "window,drun,ssh,rofi-borg:~/.config/rofi/rofi-borg/rofi-borg.sh";
    modi: "combi";
}
#+END_SRC

 - =NOTE= I don't use this method and have not tested it. I use my own custom menu. Please report on this.

** Customizing & Extending
- Every script that creates a rofi window contains it's own =prompt_message= string and can be configured per script. It is clearly marked under the variables you can change.

- Theme:
  - TODO: The top level rofi config =theme.rasi= contains general theme settings and each rofi config file inherits from it. To change the theme, change this file. 
  - The rofi configuration is entirely separate from the scripts. The scripts load their own rofi configurations.
  - The only caveat is that the rofi configuration file names must match their corresponding script file name.
- Icons:
  - Just use any font-based icons you want. Place the icon glyphs in the string for the menu item.
  - If you want it to "just work" then install [[https://github.com/FortAwesome/Font-Awesome/releases/tag/5.15.4][Font Awesome 5]]
    - I would love it if someone contributed a version that uses real icons or buttons, but I also enjoy the simplicity of this version.
- Extending:
  - A good method for adding a script is to view the four provided, and model your script after them.
  - The main script passes required variables to the subscripts. Your script must function the same way.
  - If a script is to return output to rofi, it must use logging by sending the stderr/stdout to a log file to be presented to rofi. If this is not done, rofi will freeze your computer if rofi has to wait for the command to finish before displaying it's result. 
  
** Contributing
See the customizing and extending section above. All script contributions must adhere to those guidelines.

Guide:
1. Clone the repo and create a new branch:
   =git checkout https://github.com/noncog/rofi-borg -b name_for_new_branch=
2. Make changes and test.
3. Submit pull request with comprehensive description of changes.

Additionally, here is a list of things that I would like to add but don't have time:
- Greater support for more command options of borg. If you use a certain borg command and I'm not supporting it, contribute it!
- A better README. If you want to add information or change the formatting for clarity or usability please do so and I will check it out.
** WIP
TODO:
- [ ] Change rofi configs to be theme inheritance based so user can customize top level theme.
- [ ] Add date to file names to allow multiple downloads in the same directory.
- [ ] Nest the dated downloads inside the rofi-borg-downloads directory.
- [ ] Make sure mkdir downloads is not outputting error message to logs.
- [ ] Remove or comment out font settings. Figure out if font is inherited from main rofi config.
- [ ] Recommend user to set font.
- [ ] Recommend font based icon fonts for users.
- [ ] Say font's in gif are Font Awesome 5.
- [ ] Add Customization instructions.
- [ ] Add Contribution instructions.
- [ ] Add all of the options currently possible according to borg's online documentation to each sub-script.
- [ ] Make a social preview for rofi-borg.
- [ ] Upload the social preview.
- [ ] Consider adding option to change borg passphrase from rofi-borg.
- [ ] Consider adding a borg setup guide.
- [ ] Consider adding alert support.

